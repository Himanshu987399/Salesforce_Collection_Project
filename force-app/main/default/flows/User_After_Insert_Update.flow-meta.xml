<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Permission_Set_Group_Name_For_Call_Center</name>
        <label>Permission Set Group Name For Call Center</label>
        <locationX>50</locationX>
        <locationY>923</locationY>
        <assignmentItems>
            <assignToReference>PermssionSetGroupName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Label.Permission_Set_Group_Call_Center</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Permssion_Set_Group_Blank_Or_Not</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Permission_Set_Group_Name_For_Supervisor</name>
        <label>Permission Set Group Name For Supervisor</label>
        <locationX>578</locationX>
        <locationY>923</locationY>
        <assignmentItems>
            <assignToReference>PermssionSetGroupName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Label.Permission_Set_Group_Supervisor</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Permssion_Set_Group_Blank_Or_Not</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Permission_Set_Group_Name_For_Team_Lead</name>
        <label>Permission Set Group Name For Team Lead</label>
        <locationX>314</locationX>
        <locationY>923</locationY>
        <assignmentItems>
            <assignToReference>PermssionSetGroupName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Label.Permission_Set_Group_Team_Lead</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Permssion_Set_Group_Blank_Or_Not</targetReference>
        </connector>
    </assignments>
    <customErrors>
        <name>Error</name>
        <label>Error</label>
        <locationX>314</locationX>
        <locationY>1439</locationY>
        <customErrorMessages>
            <errorMessage>{!$Flow.FaultMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Check_Role</name>
        <label>Check Role</label>
        <locationX>446</locationX>
        <locationY>815</locationY>
        <defaultConnector>
            <targetReference>Permssion_Set_Group_Blank_Or_Not</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Role_exists_call_center</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.UserRoleId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.Role_Name_Call_Center</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Permission_Set_Group_Name_For_Call_Center</targetReference>
            </connector>
            <label>Role exists, call center</label>
        </rules>
        <rules>
            <name>Role_exists_Team_Lead</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.UserRoleId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.Role_Name_Team_Lead</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Permission_Set_Group_Name_For_Team_Lead</targetReference>
            </connector>
            <label>Role exists, Team Lead</label>
        </rules>
        <rules>
            <name>Role_exists_Supervisor</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.UserRoleId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.UserRole.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.Role_Name_Supervisor</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Permission_Set_Group_Name_For_Supervisor</targetReference>
            </connector>
            <label>Role exists, Supervisor</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Role_Changed</name>
        <label>Check Role Changed</label>
        <locationX>578</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Role_Changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.UserRoleId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Role</targetReference>
            </connector>
            <label>If Role Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_update_or_insert</name>
        <label>Check update or insert</label>
        <locationX>446</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Check_Role_Changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>If update</defaultConnectorLabel>
        <rules>
            <name>If_insert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Role</targetReference>
            </connector>
            <label>If insert</label>
        </rules>
    </decisions>
    <decisions>
        <name>Permssion_Set_Group_Blank_Or_Not</name>
        <label>Permssion Set Group Blank Or Not</label>
        <locationX>446</locationX>
        <locationY>1115</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Not_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PermssionSetGroupName</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Permission_Set_Group</targetReference>
            </connector>
            <label>If Not Blank</label>
        </rules>
    </decisions>
    <description>Provide permissions based on role</description>
    <environments>Default</environments>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <interviewLabel>User (After Insert, Update) {!$Flow.CurrentDateTime}</interviewLabel>
    <label>User (After Insert, Update)</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Permission_Set_Assignment</name>
        <label>Create Permission Set Assignment</label>
        <locationX>50</locationX>
        <locationY>1331</locationY>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>AssigneeId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>PermissionSetGroupId</field>
            <value>
                <elementReference>Get_Permission_Set_Group.Id</elementReference>
            </value>
        </inputAssignments>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Permission_Set_Group</name>
        <label>Get Permission Set Group</label>
        <locationX>50</locationX>
        <locationY>1223</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Permission_Set_Assignment</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>PermssionSetGroupName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSetGroup</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_update_or_insert</targetReference>
        </connector>
        <object>User</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>PermssionSetGroupName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
